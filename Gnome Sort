#include <stdio.h>
#include <stdlib.h>
#include <time.h>

// Función para intercambiar dos elementos en un arreglo
void swap(int *a, int *b) {
    int temp = *a;
    *a = *b;
    *b = temp;
}

// Implementación del algoritmo de ordenamiento Gnome Sort
void gnomeSort(int arr[], int n) {
    int index = 0;

    while (index < n) {
        if (index == 0) {
            index++;
        }
        if (arr[index] >= arr[index - 1]) {
            index++;
        } else {
            swap(&arr[index], &arr[index - 1]);
            index--;
        }
    }
}

int main() {
    int n;
    clock_t start, end;

    printf("Ingrese la cantidad de elementos a generar y ordenar (max 1,000,000): ");
    scanf("%d", &n);

    if (n < 1 || n > 1000000) {
        printf("Cantidad de elementos no válida. Debe estar entre 1 y 1,000,000.\n");
        return 1;
    }

    // Generar números aleatorios
    int *arr = (int *)malloc(n * sizeof(int));
    if (arr == NULL) {
        printf("No se pudo asignar memoria para el arreglo.\n");
        return 1;
    }

    for (int i = 0; i < n; i++) {
        arr[i] = rand();
    }

    // Medir el tiempo de ejecución
    start = clock();
    gnomeSort(arr, n);
    end = clock();

    // Calcular el tiempo transcurrido en segundos
    double tiempo = (double)(end - start) / CLOCKS_PER_SEC;

    printf("Arreglo ordenado en %.4f segundos.\n", tiempo);

    // Liberar la memoria
    free(arr);

    return 0;
}
